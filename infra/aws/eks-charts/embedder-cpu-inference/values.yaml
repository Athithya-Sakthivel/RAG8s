# values.yaml (EKS / production)
# Use hostPath because your custom AMIs already include /workspace/models
namespace:
  create: true
  name: embedder

fullnameOverride: ""

# Image settings - point to your registry and tag
image:
  repository: "your-registry/embedder-cpu-inference"
  tag: "v1"
  pullPolicy: IfNotPresent
  pullSecret:
    enabled: false
    name: ""
    data: ""

replicaCount: 2

rollingUpdate:
  maxUnavailable: 0
  maxSurge: 1

service:
  type: ClusterIP
  port: 8000
  host: "0.0.0.0"

# Server tuning
server:
  maxLength: 500
  maxBatch: 64
  batchWaitS: 0.03

# Model: use hostPath to mount AMI-baked files
model:
  path: "/workspace/models"
  usePVC: false
  useHostPath: true
  readOnly: true
  hostPath:
    path: "/workspace/models"
    type: Directory  # Directory ensures the path must exist on the node
  initContainer:
    enabled: false
    image: "amazon/aws-cli:latest"
    command: ["sh","-c","aws s3 cp s3://mybucket/models/gte/ /workspace/models --recursive"]
    env: {}

# Node scheduling: ensure pods land on CPU nodes only
# Label your CPU nodes: kubectl label nodes <node> hardware-type=cpu
nodeSelector:
  hardware-type: "cpu"

# If your CPU nodes are tainted, add tolerations here
tolerations: []

# Pod security to allow non-root appuser to read hostPath
podSecurity:
  runAsUser: 1000
  fsGroup: 1000

# Resources: tune per benchmarking
resources:
  requests:
    cpu: "1"
    memory: "2Gi"
  limits:
    cpu: "2"
    memory: "4Gi"

# Prometheus metrics (no multiprocess config)
metrics:
  prometheusAutoScrape: true
  metricsPath: /metrics
  serviceMonitor:
    enabled: true
    namespace: monitoring
    release: prometheus
  interval: 15s
  scrapeTimeout: 10s

# Autoscaling
hpa:
  enabled: true
  minReplicas: 1
  maxReplicas: 6
  targetCPUUtilizationPercentage: 60

pdb:
  minAvailable: 1

networkPolicy:
  enabled: false
  allowedNamespaceLabel: "rag-system"

serviceAccount:
  name: embedder-sa

# Do NOT override image CMD. We rely on image's CMD (uvicorn --workers 1).
container:
  # intentionally empty: image CMD will be used
  command: []
  args: []

# Probes
probes:
  readiness:
    path: /health
    initialDelaySeconds: 10
    timeoutSeconds: 5
    periodSeconds: 10
    failureThreshold: 3
  liveness:
    path: /health
    initialDelaySeconds: 30
    timeoutSeconds: 5
    periodSeconds: 20
    failureThreshold: 3

# HPA settings (duplicate block for clarity; used above)
hpa:
  enabled: true
  minReplicas: 1
  maxReplicas: 6
  targetCPUUtilizationPercentage: 60
