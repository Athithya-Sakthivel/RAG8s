# Chart values for onnx-embedder Helm chart
image:
  repository: rag8s/rag8s-onnx-embedder-reranker-cpu-amd64
  tag: gte-modernbert
  pullPolicy: IfNotPresent

# Ray version must match the Ray inside the image
rayVersion: "2.48.0"

# Kubernetes namespace to install into
namespace: onnx-serving

# Service type to expose HTTP/gRPC/metrics. Use ClusterIP for internal only, LoadBalancer if external.
service:
  type: ClusterIP
  httpPort: 8000
  grpcPort: 9000
  metricsPort: 8080

# Prometheus settings
prometheus:
  enabled: true
  serviceMonitor:
    enabled: true
    interval: 15s

# PVC for model files (must be provisioned or bound)
pvc:
  create: true
  name: rag8s-models-pvc
  storageClassName: ""
  accessModes:
    - ReadOnlyMany
  size: 50Gi

# ServiceAccount / IRSA
serviceAccount:
  create: true
  name: rag8s-sa
  # Set roleArn when using EKS IRSA
  annotations: {}
  # Example:
  # annotations:
  #   eks.amazonaws.com/role-arn: "arn:aws:iam::123456789012:role/your-irsa-role"

# Ray head / worker autoscaling config (KubeRay workerGroupSpecs)
head:
  resources:
    requests:
      cpu: "500m"
      memory: "1Gi"
    limits:
      cpu: "1000m"
      memory: "2Gi"
  replicas: 1

worker:
  groupName: onnx-workers
  minReplicas: 1
  maxReplicas: 4
  # Default resources per worker pod
  resources:
    requests:
      cpu: "500m"
      memory: "2Gi"
    limits:
      cpu: "2000m"
      memory: "8Gi"

# Pod probes and timeouts; warmup may take time -> tune startupProbe accordingly
probes:
  liveness:
    initialDelaySeconds: 60
    periodSeconds: 20
    timeoutSeconds: 5
  readiness:
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
  startup:
    failureThreshold: 36   # 36 * 10s = 6 minutes
    periodSeconds: 10

# PodDisruptionBudget minima
pdb:
  headMinAvailable: 1
  workerMinAvailable: 1

# NetworkPolicy: name of prometheus namespace (if you want to allow it)
network:
  prometheusNamespace: monitoring

# App-specific envs (kept in sync with Dockerfile / image)
env:
  HF_HOME: /workspace/models/hf
  MODEL_DIR: /workspace/models/onnx
  MODEL_EMBEDDER_NAME: RAG8s/gte-modernbert-base-onnx-int8
  MODEL_RERANKER_NAME: RAG8s/gte-reranker-modernbert-base-onnx-int8
  EMBEDDER_ONNX_PATH: /workspace/models/onnx/gte-modernbert-base-onnx-int8/onnx/model_int8.onnx
  RERANKER_ONNX_PATH: /workspace/models/onnx/gte-reranker-modernbert-base-onnx-int8/onnx/model_int8.onnx
  EMBEDDER_OMP_NUM_THREADS: "1"
  RERANKER_OMP_NUM_THREADS: "1"
  EMBEDDER_BATCH_MAX_SIZE: "8"
  RERANKER_BATCH_MAX_SIZE: "4"
  EMBEDDER_BATCH_WAIT_TIMEOUT_S: "0.05"
  RERANKER_BATCH_WAIT_TIMEOUT_S: "0.1"
  EMBEDDER_NUM_CPUS: "1"
  RERANKER_NUM_CPUS: "1"
  PROMETHEUS_METRICS_PORT: "8080"
  PROMETHEUS_DISABLED: "0"
  LOG_LEVEL: INFO

# Labels attached to pods and service
labels:
  app: rag8s
  component: rag8s-onnx

# RBAC options
rbac:
  create: true

# Image pull secrets if needed
imagePullSecrets: []

# Optional tolerations and node selectors (EKS)
tolerations: []
nodeSelector: {}
affinity: {}

# Helm chart deployment options
createNamespace: true
