{{- /*
ResourceQuotas per namespace.
- Nil-safe against missing `.Values.core.quotas` keys.
- Emits only the quota resources/fields that are set in values.yaml (no accidental 0-limits).
- Namespaces are driven by `.Values.namespaces.*` with safe defaults.
*/ -}}
{{- $vals := .Values -}}
{{- $ns := $vals.namespaces | default dict -}}
{{- $core := $vals.core | default dict -}}
{{- $quotas := (index $core "quotas") | default dict -}}

{{- $items := list
  (dict "name" "inference-quota"  "cfg" ((index $quotas "inference")  | default dict) "ns" (default "inference"  (index $ns "inference")))
  (dict "name" "indexing-quota"   "cfg" ((index $quotas "indexing")   | default dict) "ns" (default "indexing"   (index $ns "indexing")))
  (dict "name" "monitoring-quota" "cfg" ((index $quotas "monitoring") | default dict) "ns" (default "monitoring" (index $ns "monitoring")))
  (dict "name" "stateful-quota"   "cfg" ((index $quotas "stateful")   | default dict) "ns" (default "arangodb"  (index $ns "arangodb")))
-}}

{{- range $i, $it := $items }}
{{- $cfg := $it.cfg -}}
{{- if (default false (index $cfg "enabled")) }}
apiVersion: v1
kind: ResourceQuota
metadata:
  name: {{ $it.name }}
  namespace: {{ $it.ns | quote }}
  labels:
{{ include "rag8s.labels" $ | indent 4 }}
spec:
  hard:
    {{- with (index $cfg "requestsCpu") }}
    requests.cpu: {{ . | quote }}
    {{- end }}
    {{- with (index $cfg "requestsMemory") }}
    requests.memory: {{ . | quote }}
    {{- end }}
    {{- with (index $cfg "limitsCpu") }}
    limits.cpu: {{ . | quote }}
    {{- end }}
    {{- with (index $cfg "limitsMemory") }}
    limits.memory: {{ . | quote }}
    {{- end }}
    {{- with (index $cfg "pods") }}
    pods: {{ . | quote }}
    {{- end }}
    {{- with (index $cfg "requestsGPUs") }}
    requests.nvidia.com/gpu: {{ . | quote }}
    {{- end }}
    {{- with (index $cfg "pvcs") }}
    persistentvolumeclaims: {{ . | quote }}
    {{- end }}
    {{- with (index $cfg "storage") }}
    storage: {{ . | quote }}
    {{- end }}
---
{{- end }}
{{- end }}
