{{- /*
ArangoDB backup CronJob
Avoids undefined helpers like "rag8s-aws.fullname" and fixes YAML indentation issues.
*/ -}}

{{- $name := default .Chart.Name .Values.nameOverride -}}
{{- $fullname := default (printf "%s-%s" .Release.Name $name) .Values.fullnameOverride -}}
{{- $sa := default $name .Values.arangobackup.serviceAccount -}}

apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ $fullname }}-arangobackup
  labels:
    app.kubernetes.io/name: {{ $name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: arangobackup
spec:
  schedule: "{{ .Values.arangobackup.schedule }}" # e.g. "0 */6 * * *"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: {{ default 3 .Values.arangobackup.successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ default 5 .Values.arangobackup.failedJobsHistoryLimit }}
  jobTemplate:
    spec:
      backoffLimit: {{ default 2 .Values.arangobackup.backoffLimit }}
      template:
        metadata:
          labels:
            app.kubernetes.io/name: {{ $name }}
            app.kubernetes.io/instance: {{ .Release.Name }}
            job: arangobackup
        spec:
          serviceAccountName: {{ $sa }}
          restartPolicy: OnFailure
          tolerations:
{{ toYaml .Values.arangobackup.tolerations | indent 12 }}
          nodeSelector:
{{ toYaml .Values.arangobackup.nodeSelector | indent 12 }}
          containers:
            - name: arangobackup
              image: "{{ .Values.arangobackup.image.repository }}:{{ .Values.arangobackup.image.tag }}"
              imagePullPolicy: {{ .Values.arangobackup.image.pullPolicy }}
              resources:
                requests:
                  cpu: {{ .Values.arangobackup.resources.requests.cpu }}
                  memory: {{ .Values.arangobackup.resources.requests.memory }}
                limits:
                  cpu: {{ .Values.arangobackup.resources.limits.cpu }}
                  memory: {{ .Values.arangobackup.resources.limits.memory }}
              env:
                - name: AWS_REGION
                  value: "{{ .Values.arangobackup.aws.region }}"
                - name: S3_BUCKET
                  value: "{{ .Values.arangobackup.aws.bucket }}"
                - name: S3_PREFIX
                  value: "{{ .Values.arangobackup.aws.prefix }}"
                - name: ARANGO_ENDPOINT
                  value: "{{ .Values.arangobackup.arango.endpoint }}"
                - name: ARANGO_USER
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.arangobackup.arango.secret }}
                      key: username
                - name: ARANGO_PASS
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.arangobackup.arango.secret }}
                      key: password
              volumeMounts:
                - name: backup-storage
                  mountPath: /backups
                - name: rclone-config
                  mountPath: /root/.config/rclone
                  readOnly: true
              command:
                - /bin/sh
                - -c
                - |
                  set -euo pipefail
                  TS=$(date -u +%F-%H%M%S)
                  BACKUP_DIR="/backups/arangobackup-${TS}"
                  mkdir -p "${BACKUP_DIR}"
                  echo "Starting arangobackup -> ${BACKUP_DIR}"
                  arangobackup create --server.endpoint ${ARANGO_ENDPOINT} --server.username ${ARANGO_USER} --server.password ${ARANGO_PASS} "${BACKUP_DIR}"
                  echo "Backup created: ${BACKUP_DIR}"
                  echo "Uploading to s3://${S3_BUCKET}/${S3_PREFIX}/${TS}/"
                  rclone copy --s3-region ${AWS_REGION} "${BACKUP_DIR}" "s3:${S3_BUCKET}/${S3_PREFIX}/${TS}/" --verbose
                  echo "Upload complete"
                  if [ -n "{{ .Values.arangobackup.retention.days | quote }}" ]; then
                    echo "Retention cleanup is left to S3 lifecycle or admin"
                  fi
          volumes:
            - name: backup-storage
              persistentVolumeClaim:
                claimName: {{ .Values.arangobackup.pvcClaim }}
            - name: rclone-config
              secret:
                secretName: {{ .Values.arangobackup.rcloneSecret }}
