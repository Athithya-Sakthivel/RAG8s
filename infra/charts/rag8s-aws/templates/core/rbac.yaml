{{- /*
RBAC: Roles & RoleBindings used by rag8s workloads.

Design:
- Keep namespace-scoped roles where possible (least privilege).
- Use builtin ClusterRole "view" for non-privileged viewing needs (common).
- Provide a small frontend Role that grants the frontend SA access to ConfigMaps/Secrets/Services/Endpoints/Pods in the inference namespace.
- All namespaced resources use the same namespace fallbacks as other templates.
*/ -}}
{{- $vals := .Values -}}
{{- $ns_inference := default (default "inference" $vals.namespaces.inference) (include "rag8s.namespace" .) -}}
{{- $ns_monitoring := default (default "monitoring" $vals.namespaces.monitoring) (include "rag8s.namespace" .) -}}

---
# Role: frontend-reader (least privilege for frontend pods to read config/secrets/services)
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: frontend-reader
  namespace: {{ $ns_inference | quote }}
  labels:
{{ include "rag8s.labels" . | indent 4 }}
rules:
  - apiGroups: [""]
    resources:
      - configmaps
      - secrets
      - services
      - endpoints
      - pods
    verbs:
      - get
      - list
      - watch

---
# Bind frontend-sa -> frontend-reader (namespace-scoped)
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: frontend-reader-binding
  namespace: {{ $ns_inference | quote }}
  labels:
{{ include "rag8s.labels" . | indent 4 }}
subjects:
  - kind: ServiceAccount
    name: {{ default "frontend-sa" (index .Values.serviceAccounts "frontend-sa").name | default "frontend-sa" | quote }}
    namespace: {{ $ns_inference | quote }}
roleRef:
  kind: Role
  name: frontend-reader
  apiGroup: rbac.authorization.k8s.io

---
# Bind inference-sa -> builtin ClusterRole:view (gives read-only permissions across namespace)
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: inference-sa-view
  namespace: {{ $ns_inference | quote }}
  labels:
{{ include "rag8s.labels" . | indent 4 }}
subjects:
  - kind: ServiceAccount
    name: {{ default "inference-sa" (index .Values.serviceAccounts "inference-sa").name | default "inference-sa" | quote }}
    namespace: {{ $ns_inference | quote }}
roleRef:
  kind: ClusterRole
  name: view
  apiGroup: rbac.authorization.k8s.io

---
# Bind monitoring-sa -> builtin ClusterRole:view (gives prometheus/grafana ability to read)
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: monitoring-sa-view
  namespace: {{ $ns_monitoring | quote }}
  labels:
{{ include "rag8s.labels" . | indent 4 }}
subjects:
  - kind: ServiceAccount
    name: {{ default "monitoring-sa" (index .Values.serviceAccounts "monitoring-sa").name | default "monitoring-sa" | quote }}
    namespace: {{ $ns_monitoring | quote }}
roleRef:
  kind: ClusterRole
  name: view
  apiGroup: rbac.authorization.k8s.io
