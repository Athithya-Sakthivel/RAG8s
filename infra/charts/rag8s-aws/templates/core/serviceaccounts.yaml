{{- /*
ServiceAccounts
- Create default service accounts used by chart workloads (inference, monitoring, frontend).
- Iterate user-provided .Values.serviceAccounts and create them.
- Support per-SA IAM role overrides for IRSA by merging per-SA.iam with global .Values.iam.
- Render IRSA annotation only when aws.accountId and iam.roleName are present (no empty annotations block).
*/ -}}
{{- $root := . -}}
{{- $vals := $root.Values -}}
{{- $ns_inference := default (default "inference" $vals.namespaces.inference) (include "rag8s.namespace" $root) -}}
{{- $ns_monitoring := default (default "monitoring" $vals.namespaces.monitoring) (include "rag8s.namespace" $root) -}}

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: inference-sa
  namespace: {{ $ns_inference | quote }}
  labels:
{{ include "rag8s.labels" $root | indent 4 }}
{{- /* Add IRSA annotation if global IAM/account configured */}}
{{- $globalMerged := merge $root.Values (dict "iam" (default dict $root.Values.iam)) -}}
{{- $globalIrsa := include "rag8s.irsaAnnotations" (dict "Values" $globalMerged) | trim }}
{{- if ne $globalIrsa "" }}
  annotations:
{{ $globalIrsa | indent 4 }}
{{- end }}

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: monitoring-sa
  namespace: {{ $ns_monitoring | quote }}
  labels:
{{ include "rag8s.labels" $root | indent 4 }}
{{- $monMerged := merge $root.Values (dict "iam" (default dict $root.Values.iam)) -}}
{{- $monIrsa := include "rag8s.irsaAnnotations" (dict "Values" $monMerged) | trim }}
{{- if ne $monIrsa "" }}
  annotations:
{{ $monIrsa | indent 4 }}
{{- end }}

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ default "frontend-sa" (default (index .Values.serviceAccounts "frontend-sa").name "frontend-sa") | quote }}
  namespace: {{ $ns_inference | quote }}
  labels:
{{ include "rag8s.labels" $root | indent 4 }}
{{- $feMerged := merge $root.Values (dict "iam" (default dict $root.Values.iam)) -}}
{{- $feIrsa := include "rag8s.irsaAnnotations" (dict "Values" $feMerged) | trim }}
{{- if ne $feIrsa "" }}
  annotations:
{{ $feIrsa | indent 4 }}
{{- end }}

{{- /*
User-provided service accounts: iterate the map .Values.serviceAccounts
Expected structure:
serviceAccounts:
  key:
    name: ...
    namespace: ...
    iam:
      roleName: "per-sa-role"
*/ -}}
{{- if .Values.serviceAccounts }}
{{- range $key, $sa := .Values.serviceAccounts }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ $sa.name | quote }}
  namespace: {{ default (include "rag8s.namespace" $root) $sa.namespace | quote }}
  labels:
{{ include "rag8s.labels" $root | indent 4 }}
{{- /* Merge per-SA iam into global iam for IRSA helper */}}
{{- $mergedIam := merge (default dict $root.Values.iam) (default dict $sa.iam) -}}
{{- $mergedVals := merge $root.Values (dict "iam" $mergedIam) -}}
{{- $irsa := include "rag8s.irsaAnnotations" (dict "Values" $mergedVals) | trim }}
{{- if ne $irsa "" }}
  annotations:
{{ $irsa | indent 4 }}
{{- end }}
{{- end }}
{{- end }}
