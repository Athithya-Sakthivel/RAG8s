{{- /*
Karpenter GPU Provisioner
Renders only when .Values.karpenter.enabled is true.
This provisioner is intended for GPU workloads (e.g. Ray SGLang).
*/ -}}
{{- if .Values.karpenter.enabled }}
apiVersion: karpenter.sh/v1alpha5
kind: Provisioner
metadata:
  name: gpu-provisioner
  labels:
{{ include "rag8s.labels" . | indent 4 }}
spec:
  weight: {{ default 50 .Values.karpenter.gpu.weight }}

  requirements:
    - key: "node.kubernetes.io/instance-type"
      operator: In
      values: {{ toYaml (default (list "p3.2xlarge" "p4d.24xlarge") .Values.karpenter.gpu.instanceTypes) | nindent 6 }}
    - key: "kubernetes.io/arch"
      operator: In
      values: {{ toYaml (default (list "amd64") (list .Values.karpenter.gpu.arch | default "amd64")) | nindent 6 }}
    # accelerator selector: preserve original intent; many environments rely on instanceType + GPU resource requests
    - key: "node.kubernetes.io/accelerator"
      operator: In
      values: {{ toYaml (default (list "nvidia") (list .Values.karpenter.gpu.accelerator | default "nvidia")) | nindent 6 }}
    - key: "karpenter.sh/capacity-type"
      operator: In
      values: {{ toYaml (default (list "spot" "on-demand") .Values.karpenter.gpu.capacityTypes) | nindent 6 }}

  provider:
    subnetSelector:
{{ toYaml (default dict .Values.karpenter.provider.subnetSelector) | indent 6 }}
    securityGroupSelector:
{{ toYaml (default dict .Values.karpenter.provider.securityGroupSelector) | indent 6 }}
    amiFamily: {{ quote (default "AL2" .Values.karpenter.gpu.amiFamily) }}
    tags:
{{ toYaml (default dict .Values.karpenter.gpu.tags) | indent 6 }}

  limits:
    resources:
      cpu: {{ quote (default "256" .Values.karpenter.gpu.limits.cpu) }}
      memory: {{ quote (default "1024Gi" .Values.karpenter.gpu.limits.memory) }}

  ttlSecondsAfterEmpty: {{ default 60 .Values.karpenter.gpu.ttlSecondsAfterEmpty }}
{{- end }}
