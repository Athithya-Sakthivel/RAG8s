---
# Source: rag8s/templates/namespaces.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: infra
  labels:
    name: infra
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: rag8s
    meta.helm.sh/release-namespace: default
---
# Source: rag8s/templates/namespaces.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
  labels:
    name: monitoring
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: rag8s
    meta.helm.sh/release-namespace: default
---
# Source: rag8s/templates/namespaces.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: indexing
  labels:
    name: indexing
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: rag8s
    meta.helm.sh/release-namespace: default
---
# Source: rag8s/templates/namespaces.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: inference
  labels:
    name: inference
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: rag8s
    meta.helm.sh/release-namespace: default
---
# Source: rag8s/templates/namespaces.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: frontend
  labels:
    name: frontend
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: rag8s
    meta.helm.sh/release-namespace: default
---
# Source: rag8s/templates/namespaces.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: db
  labels:
    name: db
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: rag8s
    meta.helm.sh/release-namespace: default
---
# Source: rag8s/templates/namespaces.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: dev
  labels:
    name: dev
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: rag8s
    meta.helm.sh/release-namespace: default
---
# Source: rag8s/templates/embedder-reranker-rayservice.yaml
apiVersion: ray.io/v1
kind: RayService
metadata:
  name: rag8s-embedder-reranker-serve
  namespace: inference
spec:
  rayClusterConfig:
    rayVersion: "2.48.0"
    headGroupSpec:
      rayStartParams:
        dashboard-host: "0.0.0.0"
      template:
        spec:
          containers:
            - name: ray-head
              image: "rag8s/rag8s-onnx-embedder-reranker-cpu:latest"
              imagePullPolicy: IfNotPresent
              resources:
                requests:
                  cpu: "1"
                  memory: "2Gi"
                limits:
                  cpu: "1"
                  memory: "2Gi"
              volumeMounts:
                - name: model-volume
                  mountPath: /opt/models
          volumes:
            - name: model-volume
              emptyDir: {}
    workerGroupSpecs:
      - groupName: worker
        minReplicas: 1
        maxReplicas: 2
        template:
          spec:
            containers:
              - name: ray-worker
                image: "rag8s/rag8s-onnx-embedder-reranker-cpu:latest"
                imagePullPolicy: IfNotPresent
                resources:
                  requests:
                    cpu: "500m"
                    memory: "1Gi"
                  limits:
                    cpu: "1"
                    memory: "1Gi"
                volumeMounts:
                  - name: model-volume
                    mountPath: /opt/models
            volumes:
              - name: model-volume
                emptyDir: {}

  serveConfigV2: |
    applications:
      - name: embedder-reranker-app
        import_path: rayserve-embedder-reranker:RayService
        runtime_env:
          working_dir: /app
        deployments:
          - name: EmbedderServicer
            ray_actor_options:
              num_cpus: 1
            autoscaling_config:
              min_replicas: 1
              max_replicas: 4
              target_num_ongoing_requests_per_replica: 10
          - name: RerankerServicer
            ray_actor_options:
              num_cpus: 1
            autoscaling_config:
              min_replicas: 1
              max_replicas: 2
              target_num_ongoing_requests_per_replica: 5
