{{- /*
Ingress resources driven by .Values.network.ingress.rules (list).
Each rule entry expected structure (recommended):
network:
  ingress:
    namespace: networking               # optional, defaults to values.namespaces.networking or release namespace
    class: traefik                      # optional ingress class
    tls:                                 # optional top-level TLS definitions (list of {hosts: [...], secretName: ...})
      - hosts: ["example.com"]
        secretName: example-tls
    rules:
      - host: example.com
        serviceName: my-frontend-svc    # required
        servicePort: 80                 # can be number or name
        path: /                        # optional, defaults to /
        pathType: Prefix               # optional, defaults to Prefix
        annotations:                    # optional, per-rule annotations (map)
          kubernetes.io/ingress.class: traefik
*/ -}}

{{- $root := . -}}
{{- $ing := $root.Values.network.ingress | default dict -}}
{{- $globalNs := include "rag8s.namespace" $root -}}
{{- $ns := default (default $root.Values.namespaces.networking $ing.namespace) $globalNs -}}
{{- $ingClass := default (or $ing.class (default "traefik" $root.Values.network.traefik.ingressClass)) "traefik" -}}
{{- $tlsList := $ing.tls | default list -}}
{{- $rules := $ing.rules | default list -}}

{{- if not (gt (len $rules) 0) }}
{{- /* Nothing to render */ -}}
{{- else }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "rag8s.fullname" $root }}-ingress
  namespace: {{ $ns | quote }}
  labels:
{{ include "rag8s.labels" $root | indent 4 }}
  annotations:
{{- /* Merge top-level ingress annotations first */}}
{{- if $ing.annotations }}
{{ toYaml $ing.annotations | indent 4 }}
{{- end }}
{{- /* Merge traefik-specific service annotations if present (keeps explicit ingress annotations first) */}}
{{- if and (index $root.Values "network" ) (index $root.Values.network "traefik") (index $root.Values.network.traefik "service") (index $root.Values.network.traefik.service "annotations") }}
{{ toYaml (index $root.Values.network.traefik.service.annotations) | indent 4 }}
{{- end }}
{{- /* Note: per-rule annotations are added later as patch annotations via nginx/traefik specific configuration if required */}}
spec:
  ingressClassName: {{ $ingClass | quote }}
  {{- if $tlsList }}
  tls:
{{ toYaml $tlsList | indent 4 }}
  {{- end }}
  rules:
{{- range $i, $r := $rules }}
    - host: {{ $r.host | quote }}
      http:
        paths:
          - path: {{ default "/" $r.path | quote }}
            pathType: {{ default "Prefix" $r.pathType | quote }}
            backend:
              service:
                name: {{ $r.serviceName | quote }}
                port:
                  {{- if (kindIs "string" $r.servicePort) }}
                  name: {{ $r.servicePort | quote }}
                  {{- else }}
                  number: {{ $r.servicePort | default 80 }}
                  {{- end }}
{{- if $r.annotations }}
{{/* Attach per-rule annotations by adding a dedicated annotation prefix to metadata (Ingress doesn't support per-path annotations; we attach per-host annotations at top-level metadata with a stable key) */}}
{{- end }}
{{- end }}
{{- end }}
