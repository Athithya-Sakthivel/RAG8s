{{- /*
Frontend Deployment + HPA + Service
Fully values-driven. Uses helpers for consistent names/labels/namespaces.
Renders into the inference namespace by default.
*/ -}}
{{- $vals := .Values -}}
{{- $ns := default (default "inference" $vals.namespaces.inference) (include "rag8s.namespace" .) -}}
{{- $frontend := $vals.core.frontend | default dict -}}
{{- $hpa := default dict $frontend.hpa -}}
{{- $name := include "rag8s.fullname" . -}}
{{- $selector := include "rag8s.selectorLabels" . -}}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name | quote }}
  namespace: {{ $ns | quote }}
  labels:
{{ include "rag8s.labels" . | indent 4 }}
    app.kubernetes.io/component: frontend
spec:
  replicas: {{ default 2 $frontend.replicas }}
  selector:
    matchLabels:
{{ $selector | indent 6 }}
      app.kubernetes.io/component: frontend
  template:
    metadata:
      labels:
{{ $selector | indent 8 }}
        app.kubernetes.io/component: frontend
    spec:
      serviceAccountName: {{ default "frontend-sa" $frontend.serviceAccount | quote }}
      {{- if $frontend.nodeSelector }}
      nodeSelector:
{{ toYaml $frontend.nodeSelector | indent 8 }}
      {{- end }}
      {{- if $frontend.tolerations }}
      tolerations:
{{ toYaml $frontend.tolerations | indent 8 }}
      {{- end }}
      {{- if $frontend.affinity }}
      affinity:
{{ toYaml $frontend.affinity | indent 8 }}
      {{- end }}
      containers:
        - name: frontend
          image: "{{ default "rag8s/frontend" $frontend.image.repository }}:{{ default "latest" $frontend.image.tag }}"
          imagePullPolicy: {{ default "IfNotPresent" $frontend.image.pullPolicy }}
          ports:
            - containerPort: {{ default 8080 $frontend.port }}
              name: http
              protocol: TCP
          envFrom:
            {{- if $frontend.configMap }}
            - configMapRef:
                name: {{ $frontend.configMap }}
            {{- end }}
            {{- if $frontend.secret }}
            - secretRef:
                name: {{ $frontend.secret }}
            {{- end }}
          resources:
{{ toYaml (default dict $frontend.resources) | indent 12 }}
          readinessProbe:
            httpGet:
              path: {{ default "/health" $frontend.readiness.path }}
              port: {{ default 8080 $frontend.readiness.port }}
            initialDelaySeconds: {{ default 5 $frontend.readiness.initialDelaySeconds }}
            periodSeconds: {{ default 10 $frontend.readiness.periodSeconds }}
          livenessProbe:
            httpGet:
              path: {{ default "/health" $frontend.liveness.path }}
              port: {{ default 8080 $frontend.liveness.port }}
            initialDelaySeconds: {{ default 15 $frontend.liveness.initialDelaySeconds }}
            periodSeconds: {{ default 20 $frontend.liveness.periodSeconds }}
      terminationGracePeriodSeconds: {{ default 30 $frontend.terminationGracePeriodSeconds }}

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ printf "%s-hpa" $name | quote }}
  namespace: {{ $ns | quote }}
  labels:
{{ include "rag8s.labels" . | indent 4 }}
    app.kubernetes.io/component: frontend
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ $name | quote }}
  minReplicas: {{ default 2 $hpa.minReplicas }}
  maxReplicas: {{ default 10 $hpa.maxReplicas }}
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: {{ default 60 $hpa.cpuTargetPercentage }}
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: {{ default 70 $hpa.memoryTargetPercentage }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ $name | quote }}
  namespace: {{ $ns | quote }}
  labels:
{{ include "rag8s.labels" . | indent 4 }}
    app.kubernetes.io/component: frontend
spec:
  type: {{ default "ClusterIP" (default dict $frontend.service).type }}
  selector:
{{ $selector | indent 4 }}
    app.kubernetes.io/component: frontend
  ports:
    - name: http
      port: {{ default 80 (default dict $frontend.service).port }}
      targetPort: {{ default 8080 $frontend.port }}
      protocol: TCP
