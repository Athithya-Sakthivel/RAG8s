{{- /*
Karpenter CPU Provisioner
Renders only when .Values.karpenter.enabled is true.
*/ -}}
{{- if .Values.karpenter.enabled }}
apiVersion: karpenter.sh/v1alpha5
kind: Provisioner
metadata:
  name: cpu-provisioner
  labels:
{{ include "rag8s.labels" . | indent 4 }}
spec:
  # relative scheduling weight for this provisioner (higher -> preferred)
  weight: {{ default 40 .Values.karpenter.cpu.weight }}

  # Node selection requirements: instance types, arch, capacity type
  requirements:
    - key: "node.kubernetes.io/instance-type"
      operator: In
      values: {{ toYaml (default (list "m6i.large") .Values.karpenter.cpu.instanceTypes) | nindent 6 }}
    - key: "kubernetes.io/arch"
      operator: In
      values: {{ toYaml (default (list "amd64") (list .Values.karpenter.cpu.arch | default "amd64")) | nindent 6 }}
    - key: "karpenter.sh/capacity-type"
      operator: In
      values: {{ toYaml (default (list "spot" "on-demand") .Values.karpenter.cpu.capacityTypes) | nindent 6 }}

  # Provider-specific fields (AWS selectors, AMI family, tags, etc.)
  provider:
    subnetSelector:
{{ toYaml (default dict .Values.karpenter.provider.subnetSelector) | indent 6 }}
    securityGroupSelector:
{{ toYaml (default dict .Values.karpenter.provider.securityGroupSelector) | indent 6 }}
    amiFamily: {{ quote (default "AL2" .Values.karpenter.cpu.amiFamily) }}
    tags:
{{ toYaml (default dict .Values.karpenter.cpu.tags) | indent 6 }}

  # Resource limits Karpenter will respect when provisioning nodes
  limits:
    resources:
      cpu: {{ quote (default "512" .Values.karpenter.cpu.limits.cpu) }}
      memory: {{ quote (default "2048Gi" .Values.karpenter.cpu.limits.memory) }}

  # TTL for empty nodes (seconds)
  ttlSecondsAfterEmpty: {{ default 60 .Values.karpenter.cpu.ttlSecondsAfterEmpty }}
{{- end }}
